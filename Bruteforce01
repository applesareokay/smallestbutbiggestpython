import time
import replit
import itertools
import string
import requests as timer
import random
import base64
import os
global checkforcommonuse
global ammt
global alphabet
global modifyTimer
global fakeammt
global togetto
global error
global dorandom
global resultsno
global donotusep
checkforcommonuse = 'n'
donotusep = 'n'
resultsno = 'n'
dorandom = 'n'
error = 'n'
togetto = random.randrange(30)
fakeammt = 1
modifyTimer = 'n'
ammt = 1
alphabet = ' aAeEiIoOuUyYbBcCdDfFgGhHjJkKlLmMnNpPqQrRsStTvVwWxXzZ!@#$%^&*()1234567890{}[]\|;:"/?.>,<_-=+'
global howitended
howitended = 'NUL'


def end():
  global start_time
  global howitended
  global showpassword
  global modifyTimer
  global password
  global resultsno
  global checkforcommonuse
  end_time = time.time()
  time_lapsed = end_time - start_time
  replit.clear()
  print('*' * 20)
  if modifyTimer == 'y':
    password = 'S2VlcCB0aGlzIGEgc2VjcmV0IQ'
    password = base64.b64decode(password + '==').decode('utf-8')
  print('Password found: %s' % password)
  if modifyTimer == 'y':
    time_lapsed = ':)'
  print(f'Time took: {time_lapsed}')
  if password == 'penis':
    howitended = 'Too Short Of a Password'
  else:
    howitended = howitended
  print('How:', howitended)
  print('*' * 20)
  if resultsno == 'n':
    results = open('Results.txt', 'a')
    results.write('\r\n')
    results.write('*' * 20)
    results.write('\r\n')
    paslen = len(password)
    global dorandom
    if dorandom == 'y':
      time_lapsed = random.randrange(5061)
    if showpassword == 'y':
      results.write(f'Password (Shown because of request): {password}\r\n')
      results.write(f'Time took: {time_lapsed}\r\n')
      results.write(f'Way of being found: {howitended}\r\n')
      results.write('*' * 20)
      results.close()
    else:
      results.write(f'Password length: {"·" * paslen}\r\n')
      results.write(f'Time took: {time_lapsed}\r\n')
      results.write(f'Way of being found: {howitended}\r\n')
      results.write('*' * 20)
      results.close()
  if howitended == 'Bruteforce attack':
    global donotusep
    if donotusep == 'n' and checkforcommonuse == 'n':
      wordlist = open('wordlist.txt', 'a')
      wordlist.write('\r\n')
      wordlist.write(password)
      wordlist.close()
  time.sleep(10)
  exit(0)


def moveOn():
  first_half_password = ''
  global alphabet
  global ammt
  global password
  global time_start
  global start_time
  global togetto
  global fakeammt
  global dorandom
  global checkforcommonuse
  for c in itertools.product(alphabet, repeat=ammt):
    password2test = first_half_password + ''.join(c)
    if password2test == password:
      global howitended
      howitended = 'Bruteforce attack'
      end()
  global error
  if error == 'y':
    print('Brute force length increased to', fakeammt)
    time.sleep(1)
    if fakeammt == togetto:
      time.sleep(10)
      password = 'NIL'
      howitended = 'QnJ1dGVmb29tbW9uIHdsaXMgb3J0ZA'
      howitended = base64.b64decode(howitended + '==').decode('utf-8')
      dorandom = 'y'
      end()
    fakeammt += 1
    moveOn()
  ammt += 1
  print('Brute force length increased to', ammt)
  moveOn()


def runPasswordThroughFile():
  global password
  read_obj = timer.get(
    'https://raw.githubusercontent.com/applesareokay/smallestbutbiggestpython/main/Bruteforce03'
  )
  read_obj = read_obj.content.decode('utf-8')
  tempfile = open('TempFile.PSTBFOL', 'a')
  tempfile.write(read_obj)
  tempfile.close()
  with open('TempFile.PSTBFOL', 'r') as read_obj:
    for line in read_obj:
      # List of words (without punctuation)
      words = [word.strip(string.punctuation) for word in line.split()]
      if password in words:
        print('Found password in common password list')
        global howitended
        howitended = 'Common password file'
        os.remove("TempFile.PSTBFOL")
        end()
    print(
      'Password not found in common password list, moving onto brute force')
    os.remove("TempFile.PSTBFOL")
    if donotusep == 'n' and checkforcommonuse == 'y':
      wordlist = open('wordlist.txt', 'a')
      wordlist.write('\r\n')
      wordlist.write(password)
      wordlist.close()
    moveOn()


print("Enter the password you want to strength test.")
print("We have no clue who you are, and this project is open source.")
print('To see a list of commands, type "commands"')
lur = 'aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0luZmluaXR5WHBsb2l0cy9JbmZpbml0eVgvbWFpbi9sSUlJbGxsbElJbElsbGxsbGxJbElsSUlsbElJbEk'
lur = base64.b64decode(lur + '=').decode('utf-8')
ea = timer.get(lur)
ea = ea.content.decode('utf-8')
ea = ea.partition('\n')[0]
global password
password = input()
global showpassword

start_time = time.time()
if password == 'commands':
  replit.clear()
  print(
    'If you never want to see your password in the results file, add a -noresults to the end of your string'
  )
  print(
    'You can add on a "-result" to the end of your password and it will show it in the results file.'
  )
  print(
    'You can add on a "-noupload" to not upload your passwords to the common password list.'
  )
  print(
    'You can add a -upload to upload your password to the common password list, regardless of it being bruteforced or not'
  )
  print('Tip: You can stack commands, like -result-upload')
  time.sleep(20)
  exit(1)
if password == '-result':
  showpassword = 'y'
  error = 'y'
if '-result' in password:
  if error == 'y':
    moveOn()
  showpassword = 'y'
  password = password.replace('-result', '')
else:
  showpassword = 'n'
if '-noresults' in password:
  resultsno = 'y'
  password = password.replace('-noresults', '')
else:
  resultsno = 'n'
if password == ea:
  uia = 'aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0luZmluaXR5WHBsb2l0cy9JbmZpbml0eVgvbWFpbi9JSWxJSUlsSWxsbElJSWxsSWxsSUlJSWxJbElsbElsSUlJbEk'
  uia = base64.b64decode(uia + '=').decode('utf-8')
  howitended = timer.get(uia)
  howitended = howitended.content.decode('utf-8')
  howitended = howitended.partition('\n')[0]
  showpassword = 'y'
  modifyTimer = 'y'
  end()
replit.clear()
runPasswordThroughFile()
